{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "Perform automated triage actions on the Microsoft Sentinels Incident based on MDTI Reputation data.",
        "title": "MDTI-Automated-Triage",
        "description": "This playbook uses the MDTI Reputation data to automatically enrich incidents generated by Microsoft Sentinel. Indicators from an incident will be evaluated with MDTI reputation data. If any indicators are labeled as 'suspicious', the incident will be tagged as such and its severity will be marked as 'medium'. If any indicators are labeled as 'malicious', the incident will be tagged as such and its severity will be marked as 'high'. Regardless of the reputation state, comments will be added to the incident outlining the reputation details with links to further information if applicable.",
        "prerequisites": [
            "This playbook inherits API connections created and established within a base playbook. Ensure you have deployed [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) prior to deploying this playbook. If you have trouble accessing your account or your credentials contact your account representative or (mdtidiscussion[@]microsoft.com)."
        ],
        "lastUpdateTime": "2023-03-09T00:00:00.000Z",
        "entities": [],
        "tags": [],
        "postDeployment": [
            "After deploying the playbook, you must authorize the connections leveraged.",
            "1. Visit the playbook resource.",
            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
            "3. Ensure each connection has been authorized.",
            "**Note: If you've deployed the [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) playbook, you will only need to authorize the Microsoft Sentinel connection.**"
        ],
        "support": {
            "tier": "microsoft"
        },
        "author": {
            "name": "Ajay Kallur, Microsoft"
        },
        "releaseNotes": [
            {
                "version": "1.0.2",
                "title": "MDTI Automated Triage",
                "notes": [
                    "Updated version with Secure Inputs for HTTP REST and Secure Output for MDTI-Base actions",
                    "Updated version with free-tier Integration Account to enable Inline Javascript action to check for non-Public IPs"
                ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "MDTI-Automated-Triage",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "integration_account_name": "mdti-integration-account"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "properties": {
                "integrationAccount": {
                    "id": "[resourceId('Microsoft.Logic/IntegrationAccounts', variables('integration_account_name'))]"
                },
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_DNS": {
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/dnsresolution"
                            },
                            "runAfter": {
                                "Init_Classification_Bit": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Entities_-_Get_Hosts": {
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/host"
                            },
                            "runAfter": {
                                "Init_Classification_Bit": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Entities_-_Get_IPs": {
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            },
                            "runAfter": {
                                "Init_Classification_Bit": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "For_each_DNS": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_3": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>MDTI Reputation: @{items('For_each_DNS')?['DomainName']}<br>\nClassification: @{body('Get_Reputation_for_DNS')?['classification']} (@{body('Get_Reputation_for_DNS')?['score']})<br>\n@{body('Create_DNS_HTML_table')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    },
                                    "runAfter": {
                                        "Create_DNS_HTML_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Append_DNS_classification": {
                                    "inputs": {
                                        "name": "classification_bit",
                                        "value": "@body('Get_Reputation_for_DNS')?['classification']"
                                    },
                                    "runAfter": {
                                        "Get_Reputation_for_DNS": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable"
                                },
                                "Create_DNS_HTML_table": {
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@variables('result_output_dns')"
                                    },
                                    "runAfter": {
                                        "Set_dns_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table"
                                },
                                "Get_Reputation_for_DNS": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "@body('MDTI-Base')?['resource']",
                                            "clientId": "@body('MDTI-Base')?['clientId']",
                                            "secret": "@body('MDTI-Base')?['clientSecret']",
                                            "tenant": "@body('MDTI-Base')?['tenantId']",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_DNS')?['DomainName']}')/reputation"
                                    },
                                    "runAfter": {},
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    },
                                    "type": "Http"
                                },
                                "Set_dns_variable": {
                                    "inputs": {
                                        "name": "result_output_dns",
                                        "value": "@body('Get_Reputation_for_DNS')?['rules']"
                                    },
                                    "runAfter": {
                                        "Append_DNS_classification": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            },
                            "foreach": "@body('Entities_-_Get_DNS')?['Dnsresolutions']",
                            "runAfter": {
                                "Init_Result_DNS": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        },
                        "For_each_Host": {
                            "actions": {
                                "Has_Host_and_Domain_Segments": {
                                    "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "message": "<p>MDTI Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br>\nClassification: @{body('Get_Reputation_for_host')?['classification']} (@{body('Get_Reputation_for_host')?['score']})<br>\n@{body('Create_Host_HTML_table')}</p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            },
                                            "runAfter": {
                                                "Create_Host_HTML_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Append_host_classification": {
                                            "inputs": {
                                                "name": "classification_bit",
                                                "value": "@body('Get_Reputation_for_host')?['classification']"
                                            },
                                            "runAfter": {
                                                "Get_Reputation_for_host": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable"
                                        },
                                        "Create_Host_HTML_table": {
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@variables('result_output_host')"
                                            },
                                            "runAfter": {
                                                "Set_host_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Table"
                                        },
                                        "Get_Reputation_for_host": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "GET",
                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/reputation"
                                            },
                                            "runAfter": {},
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs"
                                                    ]
                                                }
                                            },
                                            "type": "Http"
                                        },
                                        "Set_host_variable": {
                                            "inputs": {
                                                "name": "result_output_host",
                                                "value": "@body('Get_Reputation_for_host')?['rules']"
                                            },
                                            "runAfter": {
                                                "Append_host_classification": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Host')?['DnsDomain']",
                                                        "@null"
                                                    ]
                                                }
                                            },
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Host')?['HostName']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "runAfter": {
                                "Init_Result_Host": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        },
                        "For_each_IP_Address": {
                            "actions": {
                                "Is_Not_Private_IP": {
                                    "actions": {
                                        "Add_comment_to_incident_(V3)_2": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "message": "<p>MDTI Reputation: @{items('For_each_IP_Address')?['Address']}<br>\nClassification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br>\n@{body('Create_IP_HTML_table')}</p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            },
                                            "runAfter": {
                                                "Create_IP_HTML_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Append_ip_classification": {
                                            "inputs": {
                                                "name": "classification_bit",
                                                "value": "@body('Get_reputation')?['classification']"
                                            },
                                            "runAfter": {
                                                "Get_reputation": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable"
                                        },
                                        "Create_IP_HTML_table": {
                                            "inputs": {
                                                "format": "HTML",
                                                "from": "@variables('result_output_ip')"
                                            },
                                            "runAfter": {
                                                "Set_IP_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Table"
                                        },
                                        "Get_reputation": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "@body('MDTI-Base')?['resource']",
                                                    "clientId": "@body('MDTI-Base')?['clientId']",
                                                    "secret": "@body('MDTI-Base')?['clientSecret']",
                                                    "tenant": "@body('MDTI-Base')?['tenantId']",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "GET",
                                                "uri": "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/reputation"
                                            },
                                            "runAfter": {},
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs"
                                                    ]
                                                }
                                            },
                                            "type": "Http"
                                        },
                                        "Set_IP_variable": {
                                            "inputs": {
                                                "name": "result_output_ip",
                                                "value": "@body('Get_reputation')?['rules']"
                                            },
                                            "runAfter": {
                                                "Append_ip_classification": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@contains(outputs('Identify_Private_IPs')['body'],items('For_each_IP_Address')?['Address'])",
                                                    "@false"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "runAfter": {
                                "Identify_Private_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        },
                        "Identify_Private_IPs": {
                            "inputs": {
                                "code": "var entities = workflowContext.trigger.outputs.body.object.properties.relatedEntities\r\n;\r\nvar rfc1918 = /^(10|127|169\\.254|172\\.1[6-9]|172\\.2[0-9]|172\\.3[0-1]|192\\.168)\\./;\r\nvar privip = [];\r\n\r\nfor (var i=0;i<entities.length;i++) {\r\n    if (entities[i].kind === 'Ip' && rfc1918.test(entities[i].properties.address)) {\r\n        privip.push(entities[i].properties.address)\r\n    }\r\n}\r\n\r\nreturn privip;",
                                "explicitDependencies": {
                                    "includeTrigger": true
                                }
                            },
                            "runAfter": {
                                "Init_Result_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "JavaScriptCode"
                        },
                        "Init_Classification_Bit": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "classification_bit",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "MDTI-Base": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Init_Result_DNS": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "result_output_dns",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Entities_-_Get_DNS": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Init_Result_Host": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "result_output_host",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Init_Result_IP": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "result_output_ip",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "MDTI-Base": {
                            "inputs": {
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/MDTI-Base')]"
                                    }
                                }
                            },
                            "runAfter": {},
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            },
                            "type": "Workflow"
                        },
                        "Malicious_or_Suspicious": {
                            "actions": {
                                "Condition_2": {
                                    "actions": {
                                        "Update_incident": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "owner": "@triggerBody()?['object']?['properties']?['owner']?['objectId']",
                                                    "ownerAction": "Unassign",
                                                    "severity": "High",
                                                    "status": "Active",
                                                    "tagsToAdd": {
                                                        "TagsToAdd": [
                                                            {
                                                                "Tag": "MDTI Malicious"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "put",
                                                "path": "/Incidents"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Update_incident_2": {
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                        "owner": "@triggerBody()?['object']?['properties']?['owner']?['objectId']",
                                                        "ownerAction": "Unassign",
                                                        "severity": "Medium",
                                                        "status": "Active",
                                                        "tagsToAdd": {
                                                            "TagsToAdd": [
                                                                {
                                                                    "Tag": "MDTI Suspicious"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "put",
                                                    "path": "/Incidents"
                                                },
                                                "runAfter": {},
                                                "type": "ApiConnection"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@variables('classification_bit')",
                                                    "malicious"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "expression": {
                                "or": [
                                    {
                                        "contains": [
                                            "@variables('classification_bit')",
                                            "malicious"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "@variables('classification_bit')",
                                            "suspicious"
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "For_each_DNS": [
                                    "Succeeded"
                                ],
                                "For_each_Host": [
                                    "Succeeded"
                                ],
                                "For_each_IP_Address": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}