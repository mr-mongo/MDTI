{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0",
    "parameters": {
        "Log-Analytics-Workspace": {
            "type": "String"
        },
        "Playbook-Name": {
            "defaultValue": "MDTI-Base",
            "type": "String"
        },
        "Client-Id": {
            "type": "String"
        },
        "Client-Secret": {
            "type": "SecureString"
        },
        "MDTI-Resource": {
            "defaultValue": "https://graph.microsoft.com",
            "type": "String"
        },
        "MDTI-BaseUrl": {
            "defaultValue": "graph.microsoft.com",
            "type": "String"
        },
        "Api-Version": {
            "defaultValue": "beta",
            "type": "String"
        },
        "Key-Vault-Sku": {
            "defaultValue": "standard",
            "type": "string",
            "metadata": {
                "description": "Key Vault SKU name"
            },
            "allowedValues": [
                "premium",
                "standard"
            ]
        },
        "Key-Vault-Name": {
            "type": "string",
            "metadata": {
                "description": "The name of the Key Vault resource"
            }
        },
        "Key-Vault-Secret-Name": {
            "type": "string",
            "metadata": {
                "description": "The name for the Service Principal Client Secret in the Key Vault"
            }
        },
        "User-Object-Id": {
            "type": "string",
            "metadata": {
                "description": "Object ID, aka Principal ID, of the User to assign Key Vault Administrator role. If not supplied, then a role must be assigned manually in Azure Portal in order to view Key Vault contents"
            }
        }
    },
    "variables": {
        "workspace-location-inline": "[resourceGroup().location]",
        "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('Log-Analytics-Workspace'))]",
        "roleNameUser": "Key Vault Secrets User",
        "roleNameAdmin": "Key Vault Administrator",
        "roleIdMapping": {
            "Key Vault Administrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
            "Key Vault Certificates Officer": "a4417e6f-fecd-4de8-b567-7b0420556985",
            "Key Vault Crypto Officer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
            "Key Vault Crypto Service Encryption User": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
            "Key Vault Crypto User": "12338af0-0e69-4776-bea7-57ae8d297424",
            "Key Vault Reader": "21090545-7ca7-4776-b22c-e363652d74d2",
            "Key Vault Secrets Officer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
            "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
        },
        "connections_keyvault_name": "[format('keyvault-{0}', parameters('Playbook-Name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-07-01",
            "name": "[parameters('Key-Vault-Name')]",
            "location": "[variables('workspace-location-inline')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "[parameters('Key-Vault-Sku')]"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableRbacAuthorization": true,
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-10-01",
            "name": "[format('{0}/{1}', parameters('Key-Vault-Name'), parameters('Key-Vault-Secret-Name'))]",
            "properties": {
                "value": "[parameters('Client-Secret')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('Key-Vault-Name'))]",
            "name": "[guid(variables('roleIdMapping')[variables('roleNameUser')], resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name')))]",
            "properties": {
                "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('Playbook-Name')), '2017-07-01', 'full').identity.principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIdMapping')[variables('roleNameUser')])]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('Playbook-Name'))]"
            ]
        },
        {
            "condition": "[not(empty(parameters('User-Object-Id')))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('Key-Vault-Name'))]",
            "name": "[guid(variables('roleIdMapping')[variables('roleNameAdmin')], resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name')))]",
            "properties": {
                "principalId": "[parameters('User-Object-Id')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIdMapping')[variables('roleNameAdmin')])]",
                "principalType": "User"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Key-Vault-Name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('connections_keyvault_name')]",
            "location": "[variables('workspace-location-inline')]",
            "kind": "V1",
            "properties": {
                "displayName": "keyvault",
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'), 'keyvault')]"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('Key-Vault-Name')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('Playbook-Name')]",
            "location": "[variables('workspace-location-inline')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "Source": "MDTI",
                "hidden-SentinelWorkspaceId": "[variables('workspaceResourceId')]"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "Client-Id": {
                            "defaultValue": "[parameters('Client-Id')]",
                            "type": "String"
                        },
                        "MDTI-Resource": {
                            "defaultValue": "[parameters('MDTI-Resource')]",
                            "type": "String"
                        },
                        "MDTI-BaseUrl": {
                            "defaultValue": "[parameters('MDTI-BaseUrl')]",
                            "type": "String"
                        },
                        "Api-Version": {
                            "defaultValue": "[parameters('Api-Version')]",
                            "type": "String"
                        },
                        "ResourceGroupName": {
                            "defaultValue": "[resourceGroup().name]",
                            "type": "String"
                        },
                        "Subscription-Id": {
                            "defaultValue": "[subscription().subscriptionId]",
                            "type": "String"
                        },
                        "Tenant-Id": {
                            "defaultValue": "[subscription().tenantId]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http"
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "Get_SpSecret": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "clientId": "@parameters('Client-Id')",
                                    "clientSecret": "@body('Get_SpSecret')?['value']",
                                    "resource": "@{parameters('MDTI-Resource')}",
                                    "tenantId": "@parameters('Tenant-Id')",
                                    "MDTI-BaseUrl": "@{parameters('MDTI-BaseUrl')}",
                                    "Api-Version": "@parameters('Api-Version')"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "schema": {
                                    "properties": {
                                        "clientId": {
                                            "type": "string"
                                        },
                                        "clientSecret": {
                                            "type": "string"
                                        },
                                        "resource": {
                                            "type": "string"
                                        },
                                        "tenantId": {
                                            "type": "string"
                                        },
                                        "MDTI-BaseUrl": {
                                            "type": "string"
                                        },
                                        "Api-Version": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "statusCode": 200
                            }
                        },
                        "Get_SpSecret": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[format('/secrets/@{{encodeURIComponent(''{0}'')}}/value', parameters('Key-Vault-Secret-Name'))]"
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_keyvault_name'))]",
                                "connectionName": "keyvault-MDTI-Base",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('workspace-location-inline'), 'keyvault')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_keyvault_name'))]"
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "name": "[format('{0}/Microsoft.SecurityInsights/Playbook-MDTI-Base', parameters('Log-Analytics-Workspace'))]",
            "properties": {
                "parentId": "[resourceId('Microsoft.Logic/workflows', parameters('Playbook-Name'))]",
                "contentId": "MDTI-Base",
                "kind": "Playbook",
                "version": "1.0.1",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Defender Threat Intelligence",
                    "sourceId": "azuresentinel.azure-sentinel-solution-microsoftdefenderthreatint"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "support@microsoft.com"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                }
            }
        }
    ],
    "metadata": {
        "comments": "Establish the needed base resources to leverage with all MDTI playbooks.",
        "title": "MDTI-Base",
        "description": "This playbook creates a shared API Connection for all MDTI playbooks to leverage. This eases the configuration process for a user during deployment of the Microsoft Defender Threat Intelligence(MDTI) solution. In time, this base playbook may be extended to set more functionality. Azure AD App Registration credentials(ClientId/ClientSecret/TenantId) with MDTI API Permissions are needed when configuring this playbook. Those can be found on your [Azure Client App](https://learn.microsoft.com/en-us/rest/api/azure/#register-your-client-application-with-azure-ad) page. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com).",
        "prerequisites": [
            "None"
        ],
        "lastUpdateTime": "2023-03-09T00:00:00Z",
        "postDeployment": [
            "After deploying the playbook, you must authorize the connections leveraged.",
            "1. Visit the playbook resource.",
            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
            "3. Ensure each connection has been authorized."
        ],
        "releaseNotes": [
            {
                "version": "1.0.1",
                "title": "MDTI Base",
                "notes": [
                    "Initial version",
                    "Updated version with Key Vault to hold secret"
                ]
            }
        ]
    }
}